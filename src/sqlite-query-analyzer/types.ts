export type EnumMap = {
	[table: string]: EnumColumnMap;
}

export type EnumColumnMap = {
	[columnName: string]: EnumType;
}

export type EnumType = `ENUM(${string})`;

export type SQLiteType =
	| 'INTEGER'
	| 'INTEGER[]'
	| 'TEXT'
	| 'TEXT[]'
	| 'NUMERIC'
	| 'NUMERIC[]'
	| 'REAL'
	| 'REAL[]'
	| 'DATE'
	| 'DATE_TIME'
	| 'BLOB'
	| 'BOOLEAN'
	| EnumType
	| 'any';

export type JsonPropertyDef = {
	key: string;
	type: JsonType;
};


export type JsonObjType = { name: 'json', properties: JsonPropertyDef[], notNull: boolean };
export type JsonArrayType = { name: 'json[]', properties: JsonType[] };
export type JsonMapType = { name: 'json_map', type: JsonType };
export type JsonFieldType = { name: 'json_field', type: PostgresSimpleType, notNull: boolean };
export type JsonType = JsonObjType | JsonArrayType | JsonFieldType | JsonMapType;

export type PostgresType =
	| PostgresSimpleType
	| JsonType

export type PostgresEnumType = `enum(${string})`;

export type PostgresSimpleType =
	| 'bool'
	| '_bool'
	| 'bool[]'
	| 'bytea'
	| 'bytea[]'
	| '_bytea'
	| 'char'
	| '_char'
	| 'char[]'
	| 'bpchar'
	| '_bpchar'
	| 'bpchar[]'
	| 'name'
	| '_name'
	| 'name[]'
	| 'int4'
	| '_int4'
	| 'int4[]'
	| 'int8'
	| '_int8'
	| 'int8[]'
	| 'int2'
	| '_int2'
	| 'int2[]'
	| 'int2vector'
	| '_int2vector'
	| 'int2vector[]'
	| 'text'
	| '_text'
	| 'text[]'
	| 'varchar'
	| '_varchar'
	| 'varchar[]'
	| 'date'
	| '_date'
	| 'date[]'
	| 'time'
	| '_time'
	| 'time[]'
	| 'interval'
	| 'timetz'
	| '_timetz'
	| 'timetz[]'
	| '_interval'
	| 'interval[]'
	| 'bit'
	| '_bit'
	| 'bit[]'
	| 'varbit'
	| '_varbit'
	| 'varbit[]'
	| 'numeric'
	| '_numeric'
	| 'numeric[]'
	| 'uuid'
	| '_uuid'
	| 'uuid[]'
	| 'float4'
	| '_float4'
	| 'float4[]'
	| 'float8'
	| '_float8'
	| 'float8[]'
	| 'timestamp'
	| '_timestamp'
	| 'timestamp[]'
	| 'timestamptz'
	| '_timestamptz'
	| 'timestamptz[]'
	| PostgresEnumType
	| 'tsvector'
	| '_tsvector'
	| 'tsvector[]'
	| 'tsquery'
	| '_tsquery'
	| 'tsquery[]'
	| 'jsonpath'
	| '_jsonpath'
	| 'jsonpath[]'
	| 'json'
	| '_json'
	| 'json[]'
	| 'jsonb'
	| '_jsonb'
	| 'jsonb[]'
	| 'record'
	| '_record'
	| 'vector'
	| '_vector'
	| 'vector[]'
	| 'regproc'
	| '_regproc'
	| 'regproc[]'
	| 'oid'
	| '_oid'
	| 'oid[]'
	| 'tid'
	| '_tid'
	| 'tid[]'
	| 'xid'
	| '_xid'
	| 'xid[]'
	| 'cid'
	| '_cid'
	| 'cid[]'
	| 'oidvector'
	| '_oidvector'
	| 'oidvector[]'
	| 'xml'
	| '_xml'
	| 'xml[]'
	| 'point'
	| '_point'
	| 'point[]'
	| 'lseg'
	| '_lseg'
	| 'lseg[]'
	| 'path'
	| '_path'
	| 'path[]'
	| 'box'
	| '_box'
	| 'box[]'
	| 'polygon'
	| '_polygon'
	| 'polygon[]'
	| 'line'
	| '_line'
	| 'line[]'
	| 'cidr'
	| '_cidr'
	| 'cidr[]'
	| 'circle'
	| '_circle'
	| 'circle[]'
	| 'macaddr8'
	| '_macaddr8'
	| 'macaddr8[]'
	| 'money'
	| '_money'
	| 'money[]'
	| 'macaddr'
	| '_macaddr'
	| 'macaddr[]'
	| 'inet'
	| '_inet'
	| 'inet[]'
	| 'int4range'
	| '_int4range'
	| 'int4range[]'
	| 'numrange'
	| '_numrange'
	| 'numrange[]'
	| 'tsrange'
	| '_tsrange'
	| 'tsrange[]'
	| 'tstzrange'
	| '_tstzrange'
	| 'tstzrange[]'
	| 'daterange'
	| '_daterange'
	| 'daterange[]'
	| 'int8range'
	| '_int8range'
	| 'int8range[]'
	| 'aclitem'
	| '_aclitem'
	| 'aclitem[]'
	| 'cstring'
	| '_cstring'
	| 'cstring[]'
	| 'anyarray'
	| 'anyarray[]'
	| 'pg_node_tree'
	| 'pg_node_tree[]'
	| 'unknown'
	| 'null'

import pg from 'pg';

export type SelectJson08Result = {
	user_id: number;
	user_name: string;
	coalesce: SelectJson08CoalesceType[];
}

export type SelectJson08CoalesceType = {
	id: number;
	title: string;
}

export async function selectJson08(client: pg.Client | pg.Pool | pg.PoolClient): Promise<SelectJson08Result[]> {
	const sql = `
	SELECT
		u.id as user_id,
		u.name as user_name,
		coalesce(jsonb_agg(
			json_build_object(
				'id', p.id,
				'title', p.title
			)
		) FILTER (WHERE p.id IS NOT NULL), '[]')
	FROM users u
	LEFT JOIN posts p on p.fk_user = u.id
	group by u.id, u.name
	`
	return client.query({ text: sql, rowMode: 'array' })
		.then(res => res.rows.map(row => mapArrayToSelectJson08Result(row)));
}

function mapArrayToSelectJson08Result(data: any) {
	const result: SelectJson08Result = {
		user_id: data[0],
		user_name: data[1],
		coalesce: data[2]
	}
	return result;
}
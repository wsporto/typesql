import pg from 'pg';

export type UpdateMytable2Data = {
	name?: string | null;
	descr?: string | null;
}

export type UpdateMytable2Params = {
	id: number;
}

export type UpdateMytable2Result = {
	id: number;
	name?: string;
	descr?: string;
}

export async function updateMytable2(client: pg.Client | pg.Pool, data: UpdateMytable2Data, params: UpdateMytable2Params): Promise<UpdateMytable2Result | null> {
	let sql = 'UPDATE mytable2 SET';
	const values: any[] = [];
	if (data.name !== undefined) {
		sql += ' name = $1';
		values.push(data.name);
	}
	if (data.descr !== undefined) {
		if (values.length > 0) sql += ',';
		sql += ' descr = $2';
		values.push(data.descr);
	}
	sql += ' WHERE id = $3 RETURNING *';
	values.push(params.id);
	if (values.length > 0) {
		return client.query({ text: sql, values })
			.then(res => res.rows.length > 0 ? mapArrayToUpdateMytable2Result(res) : null);
	}
	return null;
}

function mapArrayToUpdateMytable2Result(data: any) {
	const result: UpdateMytable2Result = {
		id: data[0],
		name: data[1],
		descr: data[2]
	}
	return result;
}
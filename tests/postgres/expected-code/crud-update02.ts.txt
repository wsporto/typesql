import pg from 'pg';

export type UpdateMytable2Data = {
	name?: string | null;
	descr?: string | null;
}

export type UpdateMytable2Params = {
	id: number;
}

export type UpdateMytable2Result = {
	id: number;
	name?: string;
	descr?: string;
}

export async function updateMytable2(client: pg.Client | pg.Pool, data: UpdateMytable2Data, params: UpdateMytable2Params): Promise<UpdateMytable2Result | null> {
	const updateColumns = ['name', 'descr'] as const;
	const updates: string[] = [];
	const values: unknown[] = [];
	let parameterNumber = 1;

	for (const column of updateColumns) {
		const value = data[column];
		if (value !== undefined) {
			updates.push(`${column} = $${parameterNumber++}`);
			values.push(value);
		}
	}
	if (updates.length === 0) return null;
	values.push(params.id);

	const sql = `UPDATE mytable2 SET ${updates.join(', ')} WHERE id = $${parameterNumber} RETURNING *`;
	return client.query({ text: sql, values })
		.then(res => res.rows[0] ?? null);
}